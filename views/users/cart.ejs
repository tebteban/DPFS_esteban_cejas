<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>Tu Carrito - Spikeshop</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body class="bg-cyan-50">
    <div class="min-h-screen flex flex-col">
        <%- include('../partials/header') %>

        <main class="flex-grow container mx-auto px-4 py-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">Tu Carrito de Compras</h1>

            <div id="cart-content">
                </div>

            <div id="cart-summary" class="bg-white rounded-lg shadow-lg p-6 mt-8 hidden">
                <h2 class="text-2xl font-semibold text-gray-800 mb-4">Resumen del Pedido</h2>
                <div class="flex justify-between items-center text-lg font-medium text-gray-700 mb-2">
                    <span>Subtotal:</span>
                    <span id="subtotal">$0.00</span>
                </div>
                <div class="flex justify-between items-center text-lg font-medium text-gray-700 mb-4">
                    <span>Envío:</span>
                    <span>Gratis</span> </div>
                <div class="border-t border-gray-300 pt-4 flex justify-between items-center text-2xl font-bold text-cyan-700">
                    <span>Total:</span>
                    <span id="cart-total">$0.00</span>
                </div>
                <button class="mt-6 w-full px-6 py-3 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors font-semibold text-lg">
                    Proceder al Pago
                </button>
            </div>

            <div id="empty-cart-message" class="text-center text-gray-600 text-xl mt-12 hidden">
                <p>Tu carrito de compras está vacío.</p>
                <p class="mt-4">
                    <a href="/productos" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-cyan-600 hover:bg-cyan-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500">
                        <span class="material-icons mr-2">storefront</span>
                        Explorar Productos
                    </a>
                </p>
            </div>
        </main>
        
        <%- include('../partials/footer') %>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            loadCart();
        });

        function loadCart() {
            const cartContentDiv = document.getElementById('cart-content');
            const cartSummaryDiv = document.getElementById('cart-summary');
            const emptyCartMessageDiv = document.getElementById('empty-cart-message');
            const subtotalSpan = document.getElementById('subtotal');
            const cartTotalSpan = document.getElementById('cart-total');

            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            let totalSubtotal = 0;

            cartContentDiv.innerHTML = ''; // Limpia el contenido actual del carrito

            if (cart.length === 0) {
                emptyCartMessageDiv.classList.remove('hidden');
                cartSummaryDiv.classList.add('hidden');
                return;
            }

            emptyCartMessageDiv.classList.add('hidden');
            cartSummaryDiv.classList.remove('hidden');

            cart.forEach(item => {
                const itemTotal = item.price * item.quantity;
                totalSubtotal += itemTotal;

                const itemHtml = `
                    <div class="flex items-center bg-white rounded-lg shadow-md p-4 mb-4">
                        <img src="${item.image}" alt="${item.name}" class="w-24 h-24 object-contain rounded-md mr-4 border border-gray-200 p-1">
                        <div class="flex-grow">
                            <h3 class="text-xl font-semibold text-gray-800">${item.name}</h3>
                            <p class="text-gray-600">Precio: $${item.price.toFixed(2)}</p>
                            <div class="flex items-center mt-2">
                                <label for="quantity-${item.id}" class="mr-2 text-gray-700">Cantidad:</label>
                                <input
                                    type="number"
                                    id="quantity-${item.id}"
                                    value="${item.quantity}"
                                    min="1"
                                    class="w-16 px-2 py-1 border border-gray-300 rounded-md text-center quantity-input"
                                    data-product-id="${item.id}"
                                >
                                <button
                                    class="ml-4 px-3 py-1 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors remove-item-btn"
                                    data-product-id="${item.id}"
                                >
                                    Eliminar
                                </button>
                            </div>
                        </div>
                        <div class="text-right">
                            <p class="text-lg font-bold text-cyan-700">$${itemTotal.toFixed(2)}</p>
                        </div>
                    </div>
                `;
                cartContentDiv.innerHTML += itemHtml;
            });

            subtotalSpan.textContent = `$${totalSubtotal.toFixed(2)}`;
            cartTotalSpan.textContent = `$${totalSubtotal.toFixed(2)}`; // Asumiendo envío gratis por ahora

            // Añadir event listeners a los botones de eliminar y campos de cantidad
            document.querySelectorAll('.remove-item-btn').forEach(button => {
                button.addEventListener('click', (event) => {
                    const productId = event.target.dataset.productId;
                    removeItemFromCart(productId);
                });
            });

            document.querySelectorAll('.quantity-input').forEach(input => {
                input.addEventListener('change', (event) => {
                    const productId = event.target.dataset.productId;
                    const newQuantity = parseInt(event.target.value);
                    if (newQuantity >= 1) {
                        updateQuantityInCart(productId, newQuantity);
                    } else {
                        // Si la cantidad es 0 o menos, eliminar el artículo
                        removeItemFromCart(productId);
                    }
                });
            });
        }

        function removeItemFromCart(productId) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart = cart.filter(item => item.id !== productId);
            localStorage.setItem('cart', JSON.stringify(cart));
            loadCart(); // Vuelve a cargar el carrito para actualizar la vista
        }

        function updateQuantityInCart(productId, newQuantity) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            const itemIndex = cart.findIndex(item => item.id === productId);

            if (itemIndex > -1) {
                cart[itemIndex].quantity = newQuantity;
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCart(); // Vuelve a cargar el carrito para actualizar la vista y totales
            }
        }
    </script>
</body>
</html>